#!/bin/bash

usage() {
    echo "Usage: $0 -i <input_file> -d <%w|%wx|x%h|%wx%h> [-q <number>] [-e <imagemagick_supported_format>] [-o <output_file>]" 1>&2;
    exit 1
}

validate() {
    regex="$1";
    test_string="$2";
    validation_fail_message="$3";
    if ! [[ "$test_string" =~ $regex ]]; then
        echo -e $validation_fail_message;
        usage;
    fi
}

handle_dimension() {
    validate "^[0-9]+$|^[0-9]+x$|^x[0-9]+$|^[0-9]+x[0-9]+$" $dimension "Invalid dimension. \n"
    if echo $dimension | grep "x$">/dev/null; then
        width=${dimension%x};
        height=$(awk "BEGIN {print $width / ($file_aspect_ratio)}" | grep -o "^[^.]*");
        dimension="${width}x${height}"
    elif echo $dimension | grep "^x">/dev/null; then
        height=${dimension#x};
        width=$(awk "BEGIN {print $height * $file_aspect_ratio}" | grep -o "^[^.]*");
        dimension="${width}x${height}"
    fi
#    echo $dimension;
}

handle_extension() {
    [ ! -z $extension ] && extension="$file_extension";
#    echo $file_extension;
}

handle_input_file() {
    [ -z "$input_file" ] && usage;
    validate "image/*" `file -b --mime-type "$input_file"` "Input file is not an image.\n";
    file_directory=`echo "$input_file" | grep -o "^.*/"`;
    file_name=`echo "$input_file" | grep -o "[^/]*$" | grep -o "^[^.]*"`
    file_extension=`echo "$input_file" | grep -o ".[^.]*$" | tr -d "."`
    file_properties=`identify -format "%w,%h,%B,%Q" "$input_file"`
    file_width=`echo $file_properties | cut -d, -f1`;
    file_height=`echo $file_properties | cut -d, -f2`;
    file_aspect_ratio="${file_width} / ${file_height}";
    file_size=`echo $file_properties | cut -d, -f3`;
    file_quality=`echo $file_properties | cut -d, -f4`;

#    echo $file_width $file_height $file_aspect_ratio $file_size $file_quality
}

handle_output_file() {
    [ -z $output_file ] && output_file="${file_directory}${file_name}-${dimension}.${extension}"
}

handle_quality() {
    echo $file_extension | grep -E "png|mng|apng">/dev/null && quality=75;
    if [ -z $quality ]; then
        reduced_dimension="$(( $file_width - 1 ))x$(( $file_height - 1 ))";
        quality=$file_quality;
        size=$file_size;

        magick "$input_file" -resize $reduced_dimension -quality "$quality" "/tmp/$input_file";
#        echo $quality `identify -format "%B" "/tmp/$input_file"`;

        while [ $size -lt `identify -format "%B" "/tmp/$input_file"` ]; do
            quality=$(( $quality - 1 ));
            magick "$input_file" -resize $reduced_dimension -quality "$quality" "/tmp/$input_file";
#            echo $quality `identify -format "%B" "/tmp/$input_file"` ;
        done
        rm "/tmp/$input_file";
    fi
}

while getopts :d:e:i:o:q: options 2>/dev/null;do
    case $options in
        d) dimension="$OPTARG";;
        e) extension="$OPTARG";;
        i) input_file="$OPTARG";;
        o) output_file="$OPTARG";;
        q) quality="$OPTARG";;
        *) usage;;
    esac
done

handle_input_file;
handle_dimension;
handle_extension;
handle_quality;
handle_output_file;

echo using command: magick "$input_file" -resize "$dimension" -quality "$quality" "$output_file";
magick "$input_file" -resize "$dimension" -quality "$quality" "$output_file";

