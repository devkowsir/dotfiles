#!/bin/sh

# This script is for starting challanges of frontendmentor.io website.
# Place downloaded zips from challanges in $HOME/myProjects/react/FrontEndMentor/$category
# where category is newbie/junior/any_dir
cd "$HOME/myProjects/react/FrontEndMentor"
zip_path=`find -maxdepth 2 -type f | grep "zip$" | fzf --prompt "Choose FrontendMentor Challange--> "`
#zip_path: ./frontendmentor_free_newbie_problems/product-preview-card-component-main.zip
zip_path_no_ext="${zip_path%.zip}"
#zip_path_no_ext: ./frontendmentor_free_newbie_problems/product-preview-card-component-main
unzipped_dir="$(zipinfo -1 $zip_path | head -n 1)"
#unzipped_dir: product-preview-card-component-main/
project_path="${zip_path_no_ext%-*}"
#project_path: ./frontendmentor_free_newbie_problems/product-preview-card-component
project_name="${project_path#./*/}"
#project_name: product-preview-card-component

# content of differnt files
index_css="\
*, *::before, *::after {
  box-sizing: border-box;
}
* {
  margin: 0;
}
html, body {
  height: 100%;
}
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}
input, button, textarea, select {
  font: inherit;
}
p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}
#root, #__next {
  isolation: isolate;
  display: flex;
  justify-content: center;
  align-items: center;
}
"

app_jsx="\
import React from 'react'

function App() {
  return (
    <div>App</div>
  )
}

export default App
"

app_css=""

create() {
  unzip -q "$zip_path"
  mkdir "$project_path"
  mv "$unzipped_dir" "$project_path/guides"

  cd "$project_path"
  tar xpf ../../../react.tar.gz
  mv guides/images public
  mv guides/README-template.md README.md
  rm -r public/vite.svg src/assets

  sed -i "s|vite.svg|images/favicon-32x32.png|;s|Vite + React|$project_name|" index.html
  sed -i "/dist/aguides" .gitignore
  echo "$index_css" > src/index.css
  echo "$app_jsx" > src/App.jsx
  echo "$app_css" > src/App.css
  
  echo "Succesfully completed."
}

[ "$zip_path" = "" ] && exit 1
[ ! -d "$project_path" ] && create && exit 0

echo -e "1. Delete and Create New\n2. Backup and Create New\n3. Exit" |\
fzf --prompt "Project already exists. Choose what to do." |\
  while read ans; do
    case $ans in
      1*) 
        rm -rf "$project_path"
        create
        ;;
      2*) 
        mv "$project_path" "$project_path.bak"
        create
        ;;
      3*) 
        echo "Exiting"
        exit 0
        ;;
      *) exit 1;;
    esac
  done
